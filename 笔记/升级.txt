
---------------升级
@Database(entities = {User.class}, version = 3)
public abstract class UsersDatabase extends RoomDatabase {

    private static volatile UsersDatabase INSTANCE;
    public abstract UserDao userDao();

    public static UsersDatabase getInstance(Context context) {
        if (INSTANCE == null) {
            synchronized (UsersDatabase.class) {
                if (INSTANCE == null) {
                    INSTANCE = Room.databaseBuilder(context.getApplicationContext(),
                            UsersDatabase.class, "Sample.db")
                            .addMigrations(MIGRATION_1_2,MIGRATION_2_3) //数据库升级 按照1-2,2-3版本之间的升级，相当于支持1-3版本的升级
                            .allowMainThreadQueries() //允许在主线程中操作。默认是不允许的
                            .build();
                }
            }
        }
        return INSTANCE;
    }

    static final Migration MIGRATION_1_2 = new Migration(1, 2) {
        @Override
        public void migrate(SupportSQLiteDatabase database) {
            System.out.println("migrate 2222");
            database.execSQL("ALTER TABLE Users "
                    + " ADD COLUMN v2 TEXT");
        }
    };

    static final Migration MIGRATION_2_3 = new Migration(2, 3) {
        @Override
        public void migrate(SupportSQLiteDatabase database) {
            System.out.println("migrate 3333");
            database.execSQL("ALTER TABLE Users "
                    + " ADD COLUMN v3 TEXT");
        }
    };
}